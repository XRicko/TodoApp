@inject IStringLocalizer<General> Localizer

<div class="d-flex flex-column todo-item">
    <div class="category d-flex justify-content-center align-items-center text-center">
        <select id="category-select-@todoItemModel.Id @(todoItemModel.CategoryId.HasValue ? "" : "placeholder")">
            @if (!todoItemModel.CategoryId.HasValue)
            {
                <option value="" 
                        selected="@(!todoItemModel.CategoryId.HasValue)"
                        disabled>
                    @Localizer["Add Category"]
                </option>
            }

            @foreach (var category in categories)
            {
                <option value="@category.Id" selected="@(todoItemModel.CategoryId == category.Id)">@category.Name</option>
            }
        </select>

        @if (todoItemModel.CategoryId.HasValue)
        {
            <button class="secondary-custom-btn mr-2"
                @onclick="ResetCategory">
               <i class="oi oi-x"></i>
            </button>
        }
    </div>

    <div class="d-flex align-items-center">
        <div class="custom-control custom-checkbox">
            <input type="checkbox"
                   class="custom-control-input"
                   id="todo-item-@todoItemModel.Id"
                   @onchange="CheckTodoItem"
                   checked="@Checked" />
            <label class="custom-control-label" for="todo-item-@todoItemModel.Id">&nbsp;</label>
        </div>

        <div class="name-form">
            <EditNameForm TItem="@TodoItemModel"
                          Item="@todoItemModel"
                          SubmitButtonClass="btn-outline-light"
                          ResetButtonClass="btn-outline-light"
                          OnValidSubmit="Update" />
        </div>

        <div class="dropdown ml-auto">
            <button id="dropdown-btn"
                    class="status-btn"
                    data-toggle="dropdown" 
                    aria-haspopup="true"
                    aria-expanded="false"
                    @onclick="LoadStatuses">
                @todoItemModel.StatusName
            </button>

            <div class="dropdown-menu dropdown-menu-right status-menu" aria-labelledby="dropdown-btn">
                @foreach (var status in statuses.Where(x => x.Id != todoItemModel.StatusId))
                {
                    <button class="dropdown-item status-item @StatusModel.GetBackgroundColor(status.Name)" 
                            @onclick="() => UpdateStatus(status.Id)">
                        @status.Name
                    </button>
                }
            </div>
        </div>
    </div>

    @if (todoItemModel.ImageContent is not null)
    {
        <img src="data:image;base64,@Convert.ToBase64String(todoItemModel.ImageContent)"
             class="img-fluid align-self-center" />
    }

    @if (string.IsNullOrWhiteSpace(todoItemModel.Address))
    {
        <button class="add-location-btn" 
                @onclick=ChangeLocation>
            @Localizer["Add Location"]
        </button>
    }
    else 
    {
        <div class="location d-flex">
            <a href="http://maps.google.com/?q=@todoItemModel.Address" target="_blank">@todoItemModel.Address</a>

            <div class="d-flex ml-3">
                <button class="secondary-custom-btn mr-3"
                        @onclick="ChangeLocation">
                    <i class="oi oi-pencil"></i>
                </button>
                <button class="secondary-custom-btn"
                        @onclick="ResetLocation">
                    <i class="oi oi-x"></i>
                </button>
            </div>
        </div>
    }

    <div class="d-flex justify-content-between align-items-center">
        <div class="days-ago">
            @todoItemModel.DaysAgo Days ago
        </div>

        <button class="delete"
              @onclick="Delete">
            <i class="oi oi-ban"></i>
        </button>
    </div>
</div>
