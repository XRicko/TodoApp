@if (StatusName is "Planned")
{
    <a href="javascript:void(0)"
       class="badge badge-secondary ml-2 mr-1"
       @onclick="async () => await OnStatusCallback.InvokeAsync(new FilterTodoItemsArgs(StatusName, CategoryName))">
        Planned
    </a>
}
else if (StatusName is "Ongoing")
{
    <a href="javascript:void(0)"
       class="badge badge-warning ml-2 mr-1"
       @onclick="async () => await OnStatusCallback.InvokeAsync(new FilterTodoItemsArgs(StatusName, CategoryName))">
        Ongoing
    </a>
}
else if (StatusName is "Done")
{
    <a href="javascript:void(0)"
       class="badge badge-success ml-2 mr-1"
       @onclick="async () => await OnStatusCallback.InvokeAsync(new FilterTodoItemsArgs(StatusName, CategoryName))">
        Done
    </a>
}


@if (!string.IsNullOrWhiteSpace(CategoryName))
{
    <a href="javascript:void(0)"
       class="badge badge-pill badge-info"
       @onclick="async () => await OnCategoryCallback.InvokeAsync(new FilterTodoItemsArgs(StatusName, CategoryName))">
        #@CategoryName
    </a>
}

@code {
    [Parameter]
    public string StatusName { get; set; }

    [Parameter]
    public string CategoryName { get; set; }

    [Parameter]
    public EventCallback<FilterTodoItemsArgs> OnStatusCallback { get; set; }

    [Parameter]
    public EventCallback<FilterTodoItemsArgs> OnCategoryCallback { get; set; }
}
