@using System.Security.Claims

@inherits LayoutComponentBase
@implements IDisposable

@inject IStringLocalizer<General> Localizer
@inject NavigationManager NavManager

<div class="page">
	<div class="sidebar">
		<NavMenu />
	</div>

	<div class="main">

		<div class="top-row px-4 auth position-relative">
			<AuthorizeView>
				<Authorized>
					@Localizer["Welcome"], @context.User.FindFirst(ClaimTypes.Name).Value!
					<Logout />
				</Authorized>
				<NotAuthorized>
					@if (!inRegisterPage)
					{
						<Login />
						<a class="btn btn-link" href="register">@Localizer["Register"]</a>
					}
				</NotAuthorized>
			</AuthorizeView>
		</div>

		<div class="content px-4">
			@Body
		</div>
	</div>
</div>

@code {
	private bool inRegisterPage;

	private EventHandler<LocationChangedEventArgs> handler;

    protected override void OnInitialized()
	{
		CheckIfRegisterPage();

		handler = (s, e) => CheckIfRegisterPage();
		NavManager.LocationChanged += handler;
	}

	private void CheckIfRegisterPage()
	{
		inRegisterPage = NavManager.Uri.Contains("register", StringComparison.OrdinalIgnoreCase);
		StateHasChanged();
	}

	public void Dispose() => NavManager.LocationChanged -= handler;
}
