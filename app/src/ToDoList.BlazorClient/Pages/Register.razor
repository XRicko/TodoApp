@page "/register"

@using System.Net.Http
@using ToDoList.BlazorClient.Services
@using ToDoList.SharedClientLibrary

@inject NavigationManager NavManager
@inject IAuthenticationService AuthService
@inject IStringLocalizer<General> Localizer
@inject StateContainer State

<div class="d-flex flex-column position-relative">
	<h3>@Localizer["RegisterTitle"]</h3>

	<EditForm Model="@user" OnValidSubmit="CreateUser">
		<DataAnnotationsValidator />

		<div class="form-group row">
			<label for="username" class="col-md-2 col-form-label">@Localizer["Username"]: </label>
			<div class="col-md-10">
				<InputText id="username" class="form-control" @bind-Value="user.Name" />
				<ValidationMessage For="@(() => user.Name)" />
			</div>
		</div>

		<div class="form-group row">
			<label for="password" class="col-md-2 col-form-label">@Localizer["Password"]: </label>
			<div class="col-md-10">
				<InputText type="password" id="password" class="form-control" @bind-Value="user.Password" autocomplete="new-password"/>
				<ValidationMessage For="@(() => user.Password)" />
			</div>
		</div>

		<div class="form-group row">
			<label for="confirm-password" class="col-md-2 col-form-label">@Localizer["Confirm Password"]: </label>
			<div class="col-md-10">
				<InputText type="password" id="confirm-password" class="form-control" @bind-Value="user.ConfirmPassword" autocomplete="new-password" />
				<ValidationMessage For="@(() => user.ConfirmPassword)" />
			</div>
		</div>

		@if (!loading && string.IsNullOrWhiteSpace(error))
		{
			<div class="row">
				<div class="col-md-12 text-right">
					<button type="submit" class="btn custom-success-btn">@Localizer["Register"]</button>
				</div>
			</div>
		}
	</EditForm>

	@if (!string.IsNullOrWhiteSpace(error))
	{
		<ErrorMessage @bind-Error="error" />
	}

	@if (loading)
	{
		<Spinner />
	}
</div>

@code {
	private UserModel user = new();

	private string error;
	private bool loading;

	private async Task CreateUser()
	{
		loading = true;

		try
		{
			await AuthService.AuthenticateAsync(ApiEndpoints.Register, user);
			await State.InitAsync();

			loading = false;

			NavManager.NavigateTo("/");
		}
		catch (HttpRequestException e) when (e.StatusCode == System.Net.HttpStatusCode.Unauthorized)
		{
			loading = false;
			error = Localizer["Registration Failed"];
		}
	}
}
